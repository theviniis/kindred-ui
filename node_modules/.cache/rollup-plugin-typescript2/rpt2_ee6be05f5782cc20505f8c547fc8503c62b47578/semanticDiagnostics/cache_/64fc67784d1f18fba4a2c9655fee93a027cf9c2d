[{"flatMessage":"'useCallback' is declared but its value is never read.","formatted":"\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'useCallback' is declared but its value is never read.\n\n\u001b[7m1\u001b[0m import React, { useCallback, useEffect, useState } from 'react';\n\u001b[7m \u001b[0m \u001b[91m                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n  No index signature with a parameter of type 'string' was found on type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n\n\u001b[7m13\u001b[0m       const value = Object.keys(colors[key]);\n\u001b[7m  \u001b[0m \u001b[91m                                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.\n  Type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to type '(prevState: never[]) => never[]'.\n    Type '{ key: string; value: string[]; }[]' is not assignable to type 'never[]'.\n      Type '{ key: string; value: string[]; }' is not assignable to type 'never'.\n\n\u001b[7m14\u001b[0m       setColorsObject(currentList => [...currentList, { key, value }]);\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'never[]'. Did you mean 'values'?\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~\u001b[0m\n\n  \u001b[96mnode_modules/tsdx/node_modules/typescript/lib/lib.es2015.iterable.d.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m5\u001b[0m\n    \u001b[7m75\u001b[0m     values(): IterableIterator<T>;\n    \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    'values' is declared here.\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'key' implicitly has an 'any' type.\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2552: \u001b[0mCannot find name 'color'. Did you mean 'colors'?\n\n\u001b[7m21\u001b[0m     const value = color[key];\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~\u001b[0m\n","category":1,"code":6133,"type":"semantic","fileLine":"/home/viniis/code/viniis_storybook/src/components/Colors/Colors.tsx(1,17)"},{"flatMessage":"Element implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n  No index signature with a parameter of type 'string' was found on type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.","formatted":"\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'useCallback' is declared but its value is never read.\n\n\u001b[7m1\u001b[0m import React, { useCallback, useEffect, useState } from 'react';\n\u001b[7m \u001b[0m \u001b[91m                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n  No index signature with a parameter of type 'string' was found on type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n\n\u001b[7m13\u001b[0m       const value = Object.keys(colors[key]);\n\u001b[7m  \u001b[0m \u001b[91m                                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.\n  Type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to type '(prevState: never[]) => never[]'.\n    Type '{ key: string; value: string[]; }[]' is not assignable to type 'never[]'.\n      Type '{ key: string; value: string[]; }' is not assignable to type 'never'.\n\n\u001b[7m14\u001b[0m       setColorsObject(currentList => [...currentList, { key, value }]);\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'never[]'. Did you mean 'values'?\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~\u001b[0m\n\n  \u001b[96mnode_modules/tsdx/node_modules/typescript/lib/lib.es2015.iterable.d.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m5\u001b[0m\n    \u001b[7m75\u001b[0m     values(): IterableIterator<T>;\n    \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    'values' is declared here.\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'key' implicitly has an 'any' type.\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2552: \u001b[0mCannot find name 'color'. Did you mean 'colors'?\n\n\u001b[7m21\u001b[0m     const value = color[key];\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~\u001b[0m\n","category":1,"code":7053,"type":"semantic","fileLine":"/home/viniis/code/viniis_storybook/src/components/Colors/Colors.tsx(13,33)"},{"flatMessage":"Argument of type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.\n  Type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to type '(prevState: never[]) => never[]'.\n    Type '{ key: string; value: string[]; }[]' is not assignable to type 'never[]'.\n      Type '{ key: string; value: string[]; }' is not assignable to type 'never'.","formatted":"\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'useCallback' is declared but its value is never read.\n\n\u001b[7m1\u001b[0m import React, { useCallback, useEffect, useState } from 'react';\n\u001b[7m \u001b[0m \u001b[91m                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n  No index signature with a parameter of type 'string' was found on type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n\n\u001b[7m13\u001b[0m       const value = Object.keys(colors[key]);\n\u001b[7m  \u001b[0m \u001b[91m                                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.\n  Type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to type '(prevState: never[]) => never[]'.\n    Type '{ key: string; value: string[]; }[]' is not assignable to type 'never[]'.\n      Type '{ key: string; value: string[]; }' is not assignable to type 'never'.\n\n\u001b[7m14\u001b[0m       setColorsObject(currentList => [...currentList, { key, value }]);\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'never[]'. Did you mean 'values'?\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~\u001b[0m\n\n  \u001b[96mnode_modules/tsdx/node_modules/typescript/lib/lib.es2015.iterable.d.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m5\u001b[0m\n    \u001b[7m75\u001b[0m     values(): IterableIterator<T>;\n    \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    'values' is declared here.\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'key' implicitly has an 'any' type.\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2552: \u001b[0mCannot find name 'color'. Did you mean 'colors'?\n\n\u001b[7m21\u001b[0m     const value = color[key];\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~\u001b[0m\n","category":1,"code":2345,"type":"semantic","fileLine":"/home/viniis/code/viniis_storybook/src/components/Colors/Colors.tsx(14,23)"},{"flatMessage":"Property 'value' does not exist on type 'never[]'. Did you mean 'values'?","formatted":"\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'useCallback' is declared but its value is never read.\n\n\u001b[7m1\u001b[0m import React, { useCallback, useEffect, useState } from 'react';\n\u001b[7m \u001b[0m \u001b[91m                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n  No index signature with a parameter of type 'string' was found on type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n\n\u001b[7m13\u001b[0m       const value = Object.keys(colors[key]);\n\u001b[7m  \u001b[0m \u001b[91m                                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.\n  Type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to type '(prevState: never[]) => never[]'.\n    Type '{ key: string; value: string[]; }[]' is not assignable to type 'never[]'.\n      Type '{ key: string; value: string[]; }' is not assignable to type 'never'.\n\n\u001b[7m14\u001b[0m       setColorsObject(currentList => [...currentList, { key, value }]);\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'never[]'. Did you mean 'values'?\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~\u001b[0m\n\n  \u001b[96mnode_modules/tsdx/node_modules/typescript/lib/lib.es2015.iterable.d.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m5\u001b[0m\n    \u001b[7m75\u001b[0m     values(): IterableIterator<T>;\n    \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    'values' is declared here.\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'key' implicitly has an 'any' type.\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2552: \u001b[0mCannot find name 'color'. Did you mean 'colors'?\n\n\u001b[7m21\u001b[0m     const value = color[key];\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~\u001b[0m\n","category":1,"code":2551,"type":"semantic","fileLine":"/home/viniis/code/viniis_storybook/src/components/Colors/Colors.tsx(20,16)"},{"flatMessage":"Parameter 'key' implicitly has an 'any' type.","formatted":"\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'useCallback' is declared but its value is never read.\n\n\u001b[7m1\u001b[0m import React, { useCallback, useEffect, useState } from 'react';\n\u001b[7m \u001b[0m \u001b[91m                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n  No index signature with a parameter of type 'string' was found on type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n\n\u001b[7m13\u001b[0m       const value = Object.keys(colors[key]);\n\u001b[7m  \u001b[0m \u001b[91m                                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.\n  Type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to type '(prevState: never[]) => never[]'.\n    Type '{ key: string; value: string[]; }[]' is not assignable to type 'never[]'.\n      Type '{ key: string; value: string[]; }' is not assignable to type 'never'.\n\n\u001b[7m14\u001b[0m       setColorsObject(currentList => [...currentList, { key, value }]);\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'never[]'. Did you mean 'values'?\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~\u001b[0m\n\n  \u001b[96mnode_modules/tsdx/node_modules/typescript/lib/lib.es2015.iterable.d.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m5\u001b[0m\n    \u001b[7m75\u001b[0m     values(): IterableIterator<T>;\n    \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    'values' is declared here.\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'key' implicitly has an 'any' type.\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2552: \u001b[0mCannot find name 'color'. Did you mean 'colors'?\n\n\u001b[7m21\u001b[0m     const value = color[key];\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~\u001b[0m\n","category":1,"code":7006,"type":"semantic","fileLine":"/home/viniis/code/viniis_storybook/src/components/Colors/Colors.tsx(20,26)"},{"flatMessage":"Cannot find name 'color'. Did you mean 'colors'?","formatted":"\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m1\u001b[0m:\u001b[93m17\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS6133: \u001b[0m'useCallback' is declared but its value is never read.\n\n\u001b[7m1\u001b[0m import React, { useCallback, useEffect, useState } from 'react';\n\u001b[7m \u001b[0m \u001b[91m                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m13\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7053: \u001b[0mElement implicitly has an 'any' type because expression of type 'string' can't be used to index type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n  No index signature with a parameter of type 'string' was found on type '{ primary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; secondary: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; success: { 100: string; 200: string; 300: string; 400: string; 500: string; 600: string; }; error: { ...; }; neutral: { ...; }; }'.\n\n\u001b[7m13\u001b[0m       const value = Object.keys(colors[key]);\n\u001b[7m  \u001b[0m \u001b[91m                                ~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m14\u001b[0m:\u001b[93m23\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2345: \u001b[0mArgument of type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to parameter of type 'SetStateAction<never[]>'.\n  Type '(currentList: never[]) => { key: string; value: string[]; }[]' is not assignable to type '(prevState: never[]) => never[]'.\n    Type '{ key: string; value: string[]; }[]' is not assignable to type 'never[]'.\n      Type '{ key: string; value: string[]; }' is not assignable to type 'never'.\n\n\u001b[7m14\u001b[0m       setColorsObject(currentList => [...currentList, { key, value }]);\n\u001b[7m  \u001b[0m \u001b[91m                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m16\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2551: \u001b[0mProperty 'value' does not exist on type 'never[]'. Did you mean 'values'?\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m               ~~~~~\u001b[0m\n\n  \u001b[96mnode_modules/tsdx/node_modules/typescript/lib/lib.es2015.iterable.d.ts\u001b[0m:\u001b[93m75\u001b[0m:\u001b[93m5\u001b[0m\n    \u001b[7m75\u001b[0m     values(): IterableIterator<T>;\n    \u001b[7m  \u001b[0m \u001b[96m    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n    'values' is declared here.\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m20\u001b[0m:\u001b[93m26\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS7006: \u001b[0mParameter 'key' implicitly has an 'any' type.\n\n\u001b[7m20\u001b[0m   colorsObject.value.map(key => {\n\u001b[7m  \u001b[0m \u001b[91m                         ~~~\u001b[0m\n\u001b[96msrc/components/Colors/Colors.tsx\u001b[0m:\u001b[93m21\u001b[0m:\u001b[93m19\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2552: \u001b[0mCannot find name 'color'. Did you mean 'colors'?\n\n\u001b[7m21\u001b[0m     const value = color[key];\n\u001b[7m  \u001b[0m \u001b[91m                  ~~~~~\u001b[0m\n","category":1,"code":2552,"type":"semantic","fileLine":"/home/viniis/code/viniis_storybook/src/components/Colors/Colors.tsx(21,19)"}]

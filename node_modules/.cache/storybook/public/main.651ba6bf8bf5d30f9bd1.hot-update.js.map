{"version":3,"file":"main.651ba6bf8bf5d30f9bd1.hot-update.js","sources":["webpack:///./src/components/Colors/Colors.tsx","webpack:///./src/components/Colors/styles.ts"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport * as T from './types';\nimport * as S from './styles';\nimport { colors } from '../../shared';\n\nlet colorsObject = [];\nconst keys = Object.keys(colors);\nkeys.map(key => {\n  const variants = Object.keys(colors[key]);\n  colorsObject = [...colorsObject, { key, variants }];\n  return variants;\n});\n\n// console.log(colorsObject[0].variants);\n\ncolorsObject.map(({ variants }) => {\n  variants.map(variant => console.log(variant));\n  console.log(variants);\n  // keys.forEach(key => {\n  //     const hex = color.value[key];\n  //     setColorsObject(currentList => [...currentList, hex]);\n  //   });\n});\n\nexport const Colors: React.FC<T.ColorsProps> = () => {\n  // const [colorsObject, setColorsObject] = useState([]);\n\n  // const keys = Object.keys(colors);\n\n  // useEffect(() => {\n  //   keys.forEach(key => {\n  //     const variants = Object.keys(colors[key]);\n  //     setColorsObject(currentList => [\n  //       ...currentList,\n  //       { color: key, variants },\n  //     ]);\n  //   });\n\n  //   return () => {};\n  // }, []);\n\n  useEffect(() => {\n    // colorsObject.map(color => {\n    //   const keys = Object.keys(color.value);\n    //   keys.forEach(key => {\n    //     const hex = color.value[key];\n    //     setColorsObject(currentList => [...currentList, hex]);\n    //   });\n    // });\n    return () => {};\n  }, []);\n\n  return (\n    <S.Wrapper>\n      {/* {keys.map(color => (\n        <div key={color}>{color}</div>\n      ))} */}\n    </S.Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div``;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAnCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAEA;;;;A","sourceRoot":""}
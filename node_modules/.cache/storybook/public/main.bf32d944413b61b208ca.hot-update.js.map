{"version":3,"file":"main.bf32d944413b61b208ca.hot-update.js","sources":["webpack:///./src/components/colors/Colors.tsx","webpack:///./src/components/colors/index.ts","webpack:///./src/components/index.ts","webpack:///./stories/colors/Colors.stories.tsx","webpack:///./stories/typography/Typography.stories.mdx","webpack:///./stories/typography/Typography.stories.tsx"],"sourcesContent":["import React from 'react';\nimport * as T from './types';\nimport * as S from './styles';\n\nexport const Colors: React.FC<T.ColorsProps> = ({ children }) => {\n  return <S.Wrapper>{children}</S.Wrapper>;\n};\n","export * from './Colors';\nexport * from './types';\n","export * from './typography';\nexport * from './colors';\n","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Story, Meta } from '@storybook/react';\\nimport { Link, LinkProps } from '../../src/components/Link';\\n\\nexport default {\\n  title: 'Components/Atoms/Link/All Stories',\\n  component: Link,\\n  parameters: {\\n    docs: {\\n      source: {\\n        type: 'code',\\n        language: 'tsx',\\n      },\\n      description: {\\n        component: `Links can be used to create a hyperlink to web pages, files, email addresses, locations in the same page, or anything else`,\\n      },\\n    },\\n  },\\n} as Meta;\\n\\nconst href = 'https://google.com/';\\n\\nconst Template: Story<LinkProps> = ({ children, ...args }) => (\\n  <Link {...args} href={href} alt={href}>\\n    {children || `I'm a default link`}\\n  </Link>\\n);\\n\\nexport const Default = Template.bind({});\\nDefault.args = { href, alt: href };\\n\\nexport const Disabled = Template.bind({});\\nDisabled.args = {\\n  href,\\n  alt: href,\\n  disabled: true,\\n  children: `I'm a disabled link`,\\n  underline: true,\\n};\\n\\nexport const Underline = Template.bind({});\\nUnderline.args = {\\n  href,\\n  alt: href,\\n  underline: true,\\n  children: `I'm a underline link`,\\n};\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":35,\"line\":23},\"endLoc\":{\"col\":1,\"line\":27},\"startBody\":{\"col\":35,\"line\":23},\"endBody\":{\"col\":1,\"line\":27}},\"Disabled\":{\"startLoc\":{\"col\":35,\"line\":23},\"endLoc\":{\"col\":1,\"line\":27},\"startBody\":{\"col\":35,\"line\":23},\"endBody\":{\"col\":1,\"line\":27}},\"Underline\":{\"startLoc\":{\"col\":35,\"line\":23},\"endLoc\":{\"col\":1,\"line\":27},\"startBody\":{\"col\":35,\"line\":23},\"endBody\":{\"col\":1,\"line\":27}}};\n    \nimport React from 'react';\nimport { Story, Meta } from '@storybook/react';\nimport { Link, LinkProps } from '../../src/components/Link';\n\nexport default {\n  title: 'Components/Atoms/Link/All Stories',\n  component: Link,\n  parameters: {\n    docs: {\n      source: {\n        type: 'code',\n        language: 'tsx',\n      },\n      description: {\n        component: `Links can be used to create a hyperlink to web pages, files, email addresses, locations in the same page, or anything else`,\n      },\n    },\n  },\n} as Meta;\n\nconst href = 'https://google.com/';\n\nconst Template: Story<LinkProps> = ({ children, ...args }) => (\n  <Link {...args} href={href} alt={href}>\n    {children || `I'm a default link`}\n  </Link>\n);\n\nexport const Default = Template.bind({});;\nDefault.args = { href, alt: href };\n\nexport const Disabled = Template.bind({});;\nDisabled.args = {\n  href,\n  alt: href,\n  disabled: true,\n  children: `I'm a disabled link`,\n  underline: true,\n};\n\nexport const Underline = Template.bind({});\nUnderline.args = {\n  href,\n  alt: href,\n  underline: true,\n  children: `I'm a underline link`,\n};\n\n\n\nDefault.parameters = { storySource: { source: \"({ children, ...args }) => (\\n  <Link {...args} href={href} alt={href}>\\n    {children || `I'm a default link`}\\n  </Link>\\n)\" }, ...Default.parameters };\nDisabled.parameters = { storySource: { source: \"({ children, ...args }) => (\\n  <Link {...args} href={href} alt={href}>\\n    {children || `I'm a default link`}\\n  </Link>\\n)\" }, ...Disabled.parameters };\nUnderline.parameters = { storySource: { source: \"({ children, ...args }) => (\\n  <Link {...args} href={href} alt={href}>\\n    {children || `I'm a default link`}\\n  </Link>\\n)\" }, ...Underline.parameters };","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport { assertIsFn, AddContext } from \"@storybook/addon-docs\";\n\nimport { Meta, Canvas, Story, ArgsTable } from '@storybook/addon-docs';\nimport { Typography } from '../../src/components';\nimport { Default } from './Typography.stories.tsx';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nfunction MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <Meta title=\"Components/Typography\" component={Typography} mdxType=\"Meta\" />\n    <h1 {...{\n      \"id\": \"typography\"\n    }}>{`Typography`}</h1>\n    <ArgsTable of={Typography} mdxType=\"ArgsTable\" />\n    <h1 {...{\n      \"id\": \"a-idexamplesaexamples\"\n    }}><a id=\"examples\"></a>{`Examples`}</h1>\n    <h3 {...{\n      \"id\": \"default\"\n    }}>{`Default`}</h3>\n    <Canvas mdxType=\"Canvas\">\n  <Story story={Default} name=\"_Default_\" mdxType=\"Story\" />\n    </Canvas>\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n\nexport const _Default_ = Default;\n\nconst componentMeta = { title: 'Components/Typography', component: Typography, includeStories: [\"_Default_\"],  };\n\nconst mdxStoryNameToKey = {\"_Default_\":\"_Default_\"};\n\ncomponentMeta.parameters = componentMeta.parameters || {};\ncomponentMeta.parameters.docs = {\n  ...(componentMeta.parameters.docs || {}),\n  page: () => <AddContext mdxStoryNameToKey={mdxStoryNameToKey} mdxComponentAnnotations={componentMeta}><MDXContent /></AddContext>,\n};\n\nexport default componentMeta;","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { Story } from '@storybook/react';\\nimport { Typography } from '../../src/components';\\n\\nconst Template: Story = args => <Typography {...args}>what?</Typography>;\\n\\nexport const Default = Template.bind({});\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Default\":{\"startLoc\":{\"col\":24,\"line\":5},\"endLoc\":{\"col\":72,\"line\":5},\"startBody\":{\"col\":24,\"line\":5},\"endBody\":{\"col\":72,\"line\":5}}};\n    \nimport React from 'react';\nimport { Story } from '@storybook/react';\nimport { Typography } from '../../src/components';\n\nconst Template: Story = args => <Typography {...args}>what?</Typography>;\n\nexport const Default = Template.bind({});\n\n\n\nDefault.parameters = { storySource: { source: \"args => <Typography {...args}>what?</Typography>\" }, ...Default.parameters };"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA;AACA;AAGA;AADA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AArBA;AAsBA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}